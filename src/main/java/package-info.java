/*
 * Singleton:   применён - в классе FileReader для безопасного подключения к базе ФИО.
 *                         Также применен в классе Controller.
 * Factory:     применён - вынесла логику из раздутого цикла класса Input processor
 *                         в отдельный класс PersonFactory.
 * Builder:     применён - вынесла часть логики из класса PersonFactory и разгрузила
 *                         класс Person, создав PersonBuilder. Также удалось сильно
 *                         сократить число переменных в классе PersonFactory.
 * Adapter:     не применён - потому что не потребовалось взаимодействие между несовместимыми классами.
 * Bridge:      не применён - потому что в коде нет сложной иерархии наследования.
 * Facade:      неявно применён в случаях, когда выносила избыток логики в другие классы.
 * DTO:         применён - для того, чтобы сократить количество кода в классах. Ранее
 *                         в классах описывалось отдельно имя, отдельно фамилия,
 *                         отдельно отчество. Теперь ФИО слито в одну "переменную".
 * Шаблон:      не применён - потому что не всем наследникам (например, абстрактного класса Hair)
 *                         требуется реализовывать алгоритм родителя.
 *
 *              + удалила класс EyesColor за ненадобностью, чтобы сократить код.
 */